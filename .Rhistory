names_from = Contribution,
values_from = Total
) %>%
left_join(feed_data, by = c('nutrient' = 'compound')) %>%
select(c(nutrient, `Water 5% `, `Water 95% `, Buffer, Feed, digestibility)) %>%
mutate(
Feed = Feed * digestibility
) %>%
select(-digestibility) %>%
pivot_longer(
`Water 5% `:Feed,
names_to = 'Contribution',
values_to = 'Total'
)
plotdata$nutrient <- fct_relevel(plotdata$nutrient, "N", "P", "K", "Ca", "Mg", "S", "B", "Fe", "Mn", "Cu", "Zn", "Mo", "Ni", "Na")
plotdata %>%
filter(Contribution != "Water 95% " & Contribution != "Buffer"
) %>%
ggplot(aes(x = nutrient, y = Total, fill = Contribution)) +
geom_col(position = 'fill') +
labs(
title = "The source of plant nutrients in Aquaponics"
,subtitle = paste(round(assumptions_data$WaterExchange), "% water exchange, digestibility considered", sep = "")
,x = ""
,y = "Nutrient contribution (%)"
,fill = "Source"
) +
theme_minimal() +
scale_fill_manual(values=c("brown",
"lightblue"
))
ggsave('plots/nutrientContrib_water5.png')
plotdata %>%
filter(Contribution != "Water 5% " & Contribution != "Buffer"
) %>%
ggplot(aes(x = nutrient, y = Total, fill = Contribution)) +
geom_col(position = 'fill') +
labs(
title = "The source of plant nutrients in Aquaponics"
,subtitle = paste(round(assumptions_data$WaterExchange), "% water exchange, digestibility considered", sep = "")
,x = ""
,y = "Nutrient contribution (%)"
,fill = "Source"
) +
theme_minimal() +
scale_fill_manual(values=c("brown",
#"lightblue"
"darkblue"
))
ggsave('plots/nutrientContrib_water95.png')
plotdata %>%
filter(Contribution != "Water 95% "
) %>%
ggplot(aes(x = nutrient, y = Total, fill = Contribution)) +
geom_col(position = 'fill') +
labs(
title = "The source of plant nutrients in Aquaponics"
,subtitle = paste(round(assumptions_data$WaterExchange), "% water exchange, digestibility considered", sep = "")
,x = ""
,y = "Nutrient contribution (%)"
,fill = "Source"
) +
theme_minimal() +
scale_fill_manual(values=c("grey",
"brown",
"lightblue"
))
ggsave('plots/nutrientContrib_water5plusK.png')
plotdata %>%
filter(Contribution != "Water 5% "
) %>%
ggplot(aes(x = nutrient, y = Total, fill = Contribution)) +
geom_col(position = 'fill') +
labs(
title = "The source of plant nutrients in Aquaponics"
,subtitle = paste(round(assumptions_data$WaterExchange), "% water exchange, digestibility considered", sep = "")
,x = ""
,y = "Nutrient contribution (%)"
,fill = "Source"
) +
theme_minimal() +
scale_fill_manual(values=c("grey",
"brown",
"darkblue"
))
ggsave('plots/nutrientContrib_water95plusK.png')
# Load packages
library(XLConnect)
library(tidyverse)
library(NADA)
# Load Workbook
#masterfile_nutrients <- loadWorkbook("/Users/anil/Library/CloudStorage/OneDrive-JihočeskáuniverzitavČeskýchBudějovicích/General/Aquaponics - Masterfile Nutrients.xlsx")
#assumption_data_general <- readWorksheet(masterfile_nutrients, sheet = 'general', header = TRUE, startRow = 1)
assumption_data_general <- gdata::read.xls("../2 - Nutrient Solubility/data/Aquaponics - Masterfile Nutrients.xlsx", sheet = 'general')
summary(assumption_data_general)
#assumption_data_rearing <- readWorksheet(masterfile_nutrients, sheet = 'rearing', header = TRUE, startRow = 2)
assumption_data_rearing <- gdata::read.xls("../2 - Nutrient Solubility/data/Aquaponics - Masterfile Nutrients.xlsx", sheet = "rearing")
assumption_data_rearing <- assumption_data_rearing %>%
mutate(
site = as.factor(site),
city = as.factor(city),
country = as.factor(country)
)
summary(assumption_data_rearing)
#assumption_data_feed <- readWorksheet(masterfile_nutrients, sheet = 'feedIN', header = TRUE, startRow = 2)
assumption_data_feed <- gdata::read.xls('../2 - Nutrient Solubility/data/Aquaponics - Masterfile Nutrients.xlsx', sheet = 'feedIN', skip = 1)
summary(assumption_data_feed)
assumptions_data <- assumption_data_rearing %>%
left_join(assumption_data_feed, by = c("Reference_ID", "Treatment_ID")) %>%
left_join(assumption_data_general, by = c("Reference_ID", "Treatment_ID")) %>%
# XLConnect
#  rename('tankV' = 'Vtank_.m3.', 'tankN' = 'Ntank', 'totalV' = 'Vtot_.m3.', 'density' = 'Density_.kgm3.', 'biomass' = 'totBiomass_.kgsystem.', 'exchRate' = 'exchRate_.percd.', 'FR' = 'FR_..BW.', 'days' = 'duration_.d.', 'IBW' = 'IBW_.g.') %>%
# gdata
rename('tankV' = 'Vtank_m3', 'tankN' = 'Ntank', 'totalV' = 'Vtot_m3', 'density' = 'density_kgm3', 'biomass' = 'totBiomass_kg', 'days' = 'duration_d', 'IBW' = 'IBW_g') %>%
filter(
experiment != 'remineralisation' #&
#coupling != 'permanent' &
#Reference_ID != 'Siqwepu2020'
) %>%
select('Reference_ID', 'Treatment_ID', 'tankV','tankN', 'totalV', 'density', 'biomass', 'exchRate', 'FR', 'CP') %>%
# gdata
mutate(
FR = as.numeric(sub("%","",FR)) / 100,
exchRate = as.numeric(sub("%","",exchRate)) / 100,
CP = as.numeric(sub("%","",CP)) / 100
) %>%
# Calculate some assumptions
mutate(
rearingV = tankV * tankN, # m3
#dailyFeed = biomass * (FR), # kg
dailyFeed = rearingV * FR,
# totalV = tankV * tankN + miscV,
dailyFreshwater = totalV * (exchRate), # m3
waterEx_perFeed = (dailyFreshwater * 1e3) / dailyFeed # L
) %>%
#drop_na(biomass) %>%
#drop_na(dailyFreshwater) %>%
#filter(dailyFreshwater > 0) %>%
print() %>%
write_csv('results/assumptions_data_raw.csv')
# Count observations
assumptions_data %>%
summarise(
publications = length(unique(Reference_ID)),
observations = n()
) %>%
print()
# Generate summary values
assumptions_data <- assumptions_data %>%
summarise(
RearingV = mean(rearingV, na.rm = TRUE),
#sdRearingV = sd(rearingV, na.rm = TRUE),
TotalV = mean(totalV, na.rm = TRUE),
#sdTotalV = sd(totalV, na.rm = T),
#IBW = mean(IBW, na.rm = TRUE),
StockingDensity = mean(density, na.rm = TRUE), # kg m^-3
#sdStockingDensity = sd(density, na.rm = TRUE),
Biomass_Density_derived = RearingV * StockingDensity,
Biomass = mean(biomass, na.rm = TRUE), # kg
#sdBiomass = sd(biomass, na.rm = TRUE),
meanFR = mean(FR, na.rm = TRUE),
DailyFeed = mean(dailyFeed, na.rm = TRUE), # kg d^-1
#sdDailyFeed = sd(dailyFeed, na.rm = TRUE),
meanCP = mean(CP, na.rm = TRUE),
WaterExchange = mean(exchRate, na.rm = TRUE) * 100, # %
#sdWaterExchange = sd(exchRate, na.rm = TRUE) * 100,
DailyFreshwater = mean(dailyFreshwater, na.rm = TRUE), # m3
#sdDailyFreshwater = sd(dailyFreshwater, na.rm = TRUE),
WaterEx_perFeed = mean(waterEx_perFeed, na.rm = TRUE), # L
#sdWaterEx_perFeed = sd(waterEx_perFeed, na.rm = TRUE),
#pH = mean(pH, na.rm = TRUE)
) %>%
print() %>%
write_csv('results/assumptions_data_summarised.csv')
rm(assumption_data_feed, assumption_data_rearing)
# Load workbook
#water_quality <- loadWorkbook(filename = "/Users/anil/Library/CloudStorage/OneDrive-JihočeskáuniverzitavČeskýchBudějovicích/General/Aquaponics - Water Quality.xlsx")
# Load tap water data
#water_data <- readWorksheet(water_quality,
#                      sheet = 'municipalTap',
#                      startRow = 2,
#                      endCol = 47)
# gdata
water_data <- gdata::read.xls("data/Aquaponics - Water Quality.xlsx", sheet = "municipalTap", skip = 1)
water_data <- water_data[,1:grep("TOC_belowLimit", colnames(water_data))]
summary(water_data)
colnames(water_data)
# Convert belowLimit columns to logical
water_data[,grep("belowLimit", colnames(water_data))] <- apply(water_data[,grep("belowLimit", colnames(water_data))], 2, as.logical)
summary(water_data)
# Absolute and relative frequencies of countries
water_data %>%
group_by(Country) %>%
summarise(abs_num = n()) %>%
mutate(rel_num = round(abs_num/sum(abs_num), digits = 3)) %>%
print() %>%
summarise(
total_obs = sum(abs_num),
countries = length(unique(Country))
)
# Barplot - Country frequencies in dataset
water_data %>%
ggplot(aes(y = Country)) +
geom_bar()
ggsave("plots/waterData_countryPlot.png")
#
water_data %>%
select(contains("belowLimit")) %>%
pivot_longer(cols = everything(), names_to = "analyte", values_to = "belowLimit") %>%
mutate(
analyte = sub("_belowLimit", "", analyte),
na = if_else(is.na(belowLimit),1,0)
) %>%
group_by(analyte) %>%
summarise(
n_anal = n(),
na = sum(na),
belowLimit = sum(belowLimit, na.rm = TRUE)
) %>%
mutate(rel_belowLimit = round(belowLimit / (n_anal - na), digits = 3)) %>%
print() %>%
# Barplot
ggplot(aes(x = rel_belowLimit, y = analyte)) +
geom_col() +
labs(
x = "Proportion of observations below detection limit",
y = "Analyte"
)
ggsave("plots/waterData_belowLimit.png")
buffer_data <- read_csv("results/assumptions_data_summarised.csv") %>%
mutate(
dailyCP_kg = DailyFeed * meanCP, #kg
dailyN_kg = dailyCP_kg / 6.25, #divide by Kjeldahl factor
dailyH_kg = dailyN_kg / 3.5,
dailyH_mol = dailyH_kg * 1000,
dailyKOH_mol = dailyH_mol,
dailyK_g = dailyKOH_mol * 39.098,
dailyCaOH2_mol = dailyH_mol / 2,
dailyCa_g = dailyCaOH2_mol * 40.078
) %>%
print() %>%
select(dailyK_g) %>%
#select(dailyCa_g) %>%
rename(K = dailyK_g) %>%
#rename(Ca = dailyCa_g) %>%
pivot_longer(everything(), names_to = "compound", values_to = "contribution_g") %>%
print()
# Conversion of data into long format
water_data <- water_data %>%
select(-c(Reference_ID:`EC_uS_cm_25degC`)) %>%
pivot_longer(
everything(),
names_to = c("nutrient", ".value"),
names_pattern = "(.+)_(.+)*"
) %>%
mutate(nutrient = as.factor(nutrient)) %>%
drop_na() %>%
print()
summary(water_data)
write.csv2(water_data, file = 'data/water_data.csv')
# Calculation of Maximum Likelihood estimates and 95% confidence interval for censored tap water quality data
#
# Extract nutrients for looping
object <- levels(water_data$nutrient)
# Create results data frame
results <- data.frame(nutrient = vector(mode = "character"), lconf = vector(mode = "numeric"), hconf = vector(mode = "numeric"))
for (number in 1:length(object)) {
# Create subset for each nutrient
temp <- filter(water_data, nutrient == object[number]) %>%
drop_na()
# Create results dataframe with 95% confInts
results[number,1] <- object[number]
results[number,2] <- mean(cenmle(temp$mgL, temp$belowLimit, dist = 'gaussian'))[c(3)]
results[number,3] <- mean(cenmle(temp$mgL, temp$belowLimit, dist = 'gaussian'))[c(4)]
}
# Conversion of molecular into elemental concentrations
object <- c("PO4", "NO2", "NO3", "NH4", "SO4")
convFactor <- c(31/95, 7/23, 7/31, 7/9, 1/3)
for( i in 1:nrow(results)){
for(number in 1:length(object)){
if(results$nutrient[i] == object[number]){
results$lconf[i] <- results$lconf[i] * convFactor[number]
results$hconf[i] <- results$hconf[i] * convFactor[number]
}
# Calculation of N from remaining data
temp <- data.frame()
temp[1,1] <- 'TIN'
temp[1,2] <- sum(results$lconf[which(results$nutrient %in% c('NH4', 'NO2', 'NO3'))])
temp[1,3] <- sum(results$hconf[which(results$nutrient %in% c('NH4', 'NO2', 'NO3'))])
colnames(temp) <- colnames(results)
results <- rbind(results, temp)
# Load digestibility data
feed_data <- read_csv2("data/nutrient_contribution.csv") %>%
select(-c("concWater_g/m3", "concWaterMax_g/m3")) %>%
mutate(
compound = factor(compound, levels = c('N', 'P', 'K', 'Ca', 'Mg', 'S', 'B', 'Fe', 'Mn', 'Zn', 'Cu', 'Mo', 'Ni', 'Na')),
`feedComp_g/kg` = as.numeric(`feedComp_g/kg`),
digestibility = as.numeric(digestibility)
) %>%
print()
plotdata <- results %>%
filter(nutrient != "Al" & nutrient != "Cl" & nutrient != "TOC") %>%
# Rename factor levels
mutate(nutrient = factor(nutrient,
levels = c('TIN', 'PO4', 'K', 'Ca', 'Mg', 'SO4', 'B', 'Fe', 'Mn', 'Zn', 'Cu', 'Mo', 'Ni', 'Na', 'NH4', 'NO2', 'NO3'),
labels = c('N', 'P', 'K', 'Ca', 'Mg', 'S', 'B', 'Fe', 'Mn', 'Zn', 'Cu', 'Mo', 'Ni', 'Na','NH4', 'NO2', 'NO3'))) %>%
left_join(feed_data, by = c('nutrient' = 'compound')) %>%
left_join(buffer_data, by = c('nutrient' = 'compound')) %>%
drop_na(`feedComp_g/kg`) %>%
# Calculate nutrient contributions (water data already in g)
mutate(
`Water 5% Contribution` = assumptions_data$DailyFreshwater * lconf,
`Water 95% Contribution` = assumptions_data$DailyFreshwater * hconf,
FeedContribution = assumptions_data$DailyFeed * `feedComp_g/kg`,
) %>%
rename(BufferContribution = "contribution_g") %>%
select(c(nutrient, `Water 5% Contribution`, `Water 95% Contribution`, FeedContribution, BufferContribution)) %>%
pivot_longer(cols = c(`Water 5% Contribution`, `Water 95% Contribution`, FeedContribution, BufferContribution),
names_to = 'Contribution',
names_pattern = '(.*)Contribution',
values_to = 'Total') %>%
mutate(nutrient = as.factor(nutrient))
plotdata <- plotdata %>% mutate(Total = if_else(Total > 0,Total, 0, missing = 0))
print(plotdata)
plotdata$nutrient <- fct_relevel(plotdata$nutrient, "N", "P", "K", "Ca", "Mg", "S", "B", "Fe", "Mn", "Cu", "Zn", "Mo", "Ni", "Na")
plotdata %>%
ggplot(aes(x = nutrient, y = Total, fill = Contribution)) +
geom_col(position = 'fill') +
geom_hline(yintercept = c(0.25, 0.5, 0.75), linetype = "dashed", alpha = 0.75) +
labs(
title = "The source of plant nutrients in Aquaponics"
,subtitle = paste(round(assumptions_data$WaterExchange), "% water exchange, digestibility not considered", sep = "")
,x = ""
,y = "Relative nutrient contribution"
,fill = "Source"
) +
theme_minimal() +
scale_fill_manual(values=c("grey",
"brown",
"lightblue",
"darkblue"))
plotdata <- plotdata %>%
pivot_wider(
names_from = Contribution,
values_from = Total
) %>%
left_join(feed_data, by = c('nutrient' = 'compound')) %>%
select(c(nutrient, `Water 5% `, `Water 95% `, Buffer, Feed, digestibility)) %>%
mutate(
Feed = Feed * digestibility
) %>%
select(-digestibility) %>%
pivot_longer(
`Water 5% `:Feed,
names_to = 'Contribution',
values_to = 'Total'
)
plotdata$nutrient <- fct_relevel(plotdata$nutrient, "N", "P", "K", "Ca", "Mg", "S", "B", "Fe", "Mn", "Cu", "Zn", "Mo", "Ni", "Na")
plotdata %>%
filter(Contribution != "Water 95% " & Contribution != "Buffer"
) %>%
ggplot(aes(x = nutrient, y = Total, fill = Contribution)) +
geom_col(position = 'fill') +
labs(
title = "The source of plant nutrients in Aquaponics"
,subtitle = paste(round(assumptions_data$WaterExchange), "% water exchange, digestibility considered", sep = "")
,x = ""
,y = "Nutrient contribution (%)"
,fill = "Source"
) +
theme_minimal() +
scale_fill_manual(values=c("brown",
"lightblue"
))
ggsave('plots/nutrientContrib_water5.png')
plotdata %>%
filter(Contribution != "Water 5% " & Contribution != "Buffer"
) %>%
ggplot(aes(x = nutrient, y = Total, fill = Contribution)) +
geom_col(position = 'fill') +
labs(
title = "The source of plant nutrients in Aquaponics"
,subtitle = paste(round(assumptions_data$WaterExchange), "% water exchange, digestibility considered", sep = "")
,x = ""
,y = "Nutrient contribution (%)"
,fill = "Source"
) +
theme_minimal() +
scale_fill_manual(values=c("brown",
#"lightblue"
"darkblue"
))
ggsave('plots/nutrientContrib_water95.png')
plotdata %>%
filter(Contribution != "Water 95% "
) %>%
ggplot(aes(x = nutrient, y = Total, fill = Contribution)) +
geom_col(position = 'fill') +
labs(
title = "The source of plant nutrients in Aquaponics"
,subtitle = paste(round(assumptions_data$WaterExchange), "% water exchange, digestibility considered", sep = "")
,x = ""
,y = "Nutrient contribution (%)"
,fill = "Source"
) +
theme_minimal() +
scale_fill_manual(values=c("grey",
"brown",
"lightblue"
))
ggsave('plots/nutrientContrib_water5plusK.png')
plotdata %>%
filter(Contribution != "Water 5% "
) %>%
ggplot(aes(x = nutrient, y = Total, fill = Contribution)) +
geom_col(position = 'fill') +
labs(
title = "The source of plant nutrients in Aquaponics"
,subtitle = paste(round(assumptions_data$WaterExchange), "% water exchange, digestibility considered", sep = "")
,x = ""
,y = "Nutrient contribution (%)"
,fill = "Source"
) +
theme_minimal() +
scale_fill_manual(values=c("grey",
"brown",
"darkblue"
))
ggsave('plots/nutrientContrib_water95plusK.png')
read_csv("results/assumptions_data_summarised.csv") %>%
mutate(
dailyCP_kg = DailyFeed * meanCP, #kg
dailyN_kg = dailyCP_kg / 6.25, #divide by Kjeldahl factor
dailyH_kg = dailyN_kg / 3.5,
dailyH_mol = dailyH_kg * 1000,
dailyKOH_mol = dailyH_mol,
dailyK_g = dailyKOH_mol * 39.098,
dailyCaOH2_mol = dailyH_mol / 2,
dailyCa_g = dailyCaOH2_mol * 40.078
) %>%
print() %>%
select(dailyK_g) %>%
select(dailyCa_g) %>%
rename(K = dailyK_g) %>%
rename(Ca = dailyCa_g) %>%
pivot_longer(everything(), names_to = "compound", values_to = "contribution_g") %>%
print()
read_csv("results/assumptions_data_summarised.csv") %>%
mutate(
dailyCP_kg = DailyFeed * meanCP, #kg
dailyN_kg = dailyCP_kg / 6.25, #divide by Kjeldahl factor
dailyH_kg = dailyN_kg / 3.5,
dailyH_mol = dailyH_kg * 1000,
dailyKOH_mol = dailyH_mol,
dailyK_g = dailyKOH_mol * 39.098,
dailyCaOH2_mol = dailyH_mol / 2,
dailyCa_g = dailyCaOH2_mol * 40.078
) %>%
print()
read_csv("results/assumptions_data_summarised.csv") %>%
mutate(
dailyCP_kg = DailyFeed * meanCP, #kg
dailyN_kg = dailyCP_kg / 6.25, #divide by Kjeldahl factor
dailyH_kg = dailyN_kg / 3.5,
dailyH_mol = dailyH_kg * 1000,
dailyKOH_mol = dailyH_mol,
dailyK_g = dailyKOH_mol * 39.098,
dailyCaOH2_mol = dailyH_mol / 2,
dailyCa_g = dailyCaOH2_mol * 40.078
) %>%
print() %>%
select(dailyK_g) %>%
select(dailyCa_g) %>%
rename(K = dailyK_g) %>%
rename(Ca = dailyCa_g)
read_csv("results/assumptions_data_summarised.csv") %>%
mutate(
dailyCP_kg = DailyFeed * meanCP, #kg
dailyN_kg = dailyCP_kg / 6.25, #divide by Kjeldahl factor
dailyH_kg = dailyN_kg / 3.5,
dailyH_mol = dailyH_kg * 1000,
dailyKOH_mol = dailyH_mol,
dailyK_g = dailyKOH_mol * 39.098,
dailyCaOH2_mol = dailyH_mol / 2,
dailyCa_g = dailyCaOH2_mol * 40.078
) %>%
print() %>%
#select(dailyK_g) %>%
#select(dailyCa_g) %>%
rename(K = dailyK_g) %>%
rename(Ca = dailyCa_g) %>%
pivot_longer(everything(), names_to = "compound", values_to = "contribution_g") %>%
print()
read_csv("results/assumptions_data_summarised.csv") %>%
mutate(
dailyCP_kg = DailyFeed * meanCP, #kg
dailyN_kg = dailyCP_kg / 6.25, #divide by Kjeldahl factor
dailyH_kg = dailyN_kg / 3.5,
dailyH_mol = dailyH_kg * 1000,
dailyKOH_mol = dailyH_mol,
dailyK_g = dailyKOH_mol * 39.098,
dailyCaOH2_mol = dailyH_mol / 2,
dailyCa_g = dailyCaOH2_mol * 40.078
) %>%
print() %>%
#select(dailyK_g) %>%
#select(dailyCa_g) %>%
select(c(dailyK_g, dailyCa_g)) %>%
rename(K = dailyK_g) %>%
rename(Ca = dailyCa_g) %>%
pivot_longer(everything(), names_to = "compound", values_to = "contribution_g") %>%
print()
